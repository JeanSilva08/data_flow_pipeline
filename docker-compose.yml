version: '3.8'

services:
  app:
    build: .
    container_name: data_flow_pipeline
    depends_on:
      db:
        condition: service_healthy  # Waits for DB to be ready
    environment:
      - DB_HOST=mysql_db
      - DB_NAME=mainstreet_data_pipeline
      - DB_USER=root
      - DB_PASSWORD=rootpassword
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}  # Load from .env
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}  # Load from .env
    volumes:
      - .:/app
    networks:
      - data_network
    restart: unless-stopped  # Automatically restart on failure

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mainstreet_data_pipeline
    ports:
      - "3307:3306"  # Expose MySQL on port 3307
    volumes:
      - mysql_data:/var/lib/mysql  # Persist MySQL data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Initialize DB schema
    networks:
      - data_network
    healthcheck:  # Ensure DB is ready before app starts
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    restart: unless-stopped  # Automatically restart on failure

volumes:
  mysql_data:  # Persistent volume for MySQL data

networks:
  data_network:
    driver: bridge  # Internal network for app and DB